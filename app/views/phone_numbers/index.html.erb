<% @phone_numbers.each do |phone_number| %>
    <div class="phone-number">
        <h4>
          <%= icon(name: "caret-right", class: "expand-icon") %>
          <span class="incoming-number"><%= phone_number.incoming_number %></span>
        </h4>

        <div class="details well">
            <%= render partial: "call_form" %>
            
            <hr>
            
            <%= render partial: "voicemail_listing", locals: {phone_number: phone_number} %>
            
            <hr>

            <%= bootstrap_form_for phone_number, class: "form-horizontal" do |f| %>
              <%= f.text_field :forwarding_number %>
              <%= f.on_off :forwarding, labelled: true %>
              <%= f.on_off :voicemail, labelled: true %>
              <%= f.save_changes %>
            <% end %>
        </div>
    </div>
<% end %>

<br>

<%= button icon(name: "refresh", label: "Sync Numbers"), sync_phone_numbers_path, method: :post, data: {"spin-on-click" => true, "click-text" => "Syncing..."} %>

<% content_for :inline_js do %>
  <script>
    $(document).ready(function(){
        Twilio.Device.setup("<%= TwilioWrapper.instance.client_token(PhoneNumber.first.id) %>");
        $("#hangup").hide();
        var connection = null;

        $("#call-form").submit(function() {
          $("#start-call").click();
          return false;
        });
        
        $(document).on("click", "#start-call", function() {
            params = {"OutgoingNumber" : $("#outgoing-number").first().val()};
            connection = Twilio.Device.connect(params);
        });

        $(document).on("click", "#hangup", function() {  
            Twilio.Device.disconnectAll();
        });
     
        Twilio.Device.ready(function (device) {
            $('#status').text('Ready to start call');
        });
     
        Twilio.Device.incoming(function (conn) {
            if (confirm('Accept incoming call from ' + conn.parameters.From + '?')){
                connection=conn;
                conn.accept();
            }
        });
     
        Twilio.Device.offline(function (device) {
            $('#status').text('Offline');
        });
     
        Twilio.Device.error(function (error) {
            $('#status').text(error);
        });
     
        Twilio.Device.connect(function (conn) {
            $('#status').text("Successfully established call");
            toggleCallStatus();
        });
     
        Twilio.Device.disconnect(function (conn) {
            $('#status').text("Call ended");
            toggleCallStatus();
        });
         
        function toggleCallStatus(){
            $('#start-call').toggle();
            $('#hangup').toggle();
        }
    });
  </script>
<% end %>